def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg24, arg25):
    var86 = var28(arg24, arg25)
    var87 = -1132966657 + arg24
    var88 = var87 + 696593510 & var87
    var89 = (var87 & arg25 + (((790709192 ^ (arg24 | (((var86 | var86) ^ ((((arg25 ^ 234) + -1591111322) ^ 1547516198 - var86 | 1714044695 - arg24) ^ arg25) + arg25 ^ var86) & (arg25 ^ -1192179283) - var87))) ^ arg25) | arg24)) + var88
    var90 = var89 ^ ((arg25 - arg25) + (var87 | 1356721734)) | ((var88 | -851) - arg25 | (arg25 | 29825457 + ((arg24 + -112760626) | 412) + var86 | arg24)) - -515
    var91 = ((-683 - (((-720 - var88) & (arg24 + ((var89 & (var86 + var87)) | var88))) + (var86 & var87) ^ var89 ^ var90 + -478 ^ var87) + var86) + 783 & 408 ^ var90 - var89 & var90 ^ var87) + arg24
    result = var90 | var88
    return result
def func6(arg29, arg30):
    var57 = func7(arg30, arg29)
    var60 = class10()
    for var61 in xrange(6):
        var62 = var60.func11
        var62(arg29, arg29)
    var63 = -127048659 & var57 ^ (arg30 | arg30)
    var64 = arg29 + arg29
    var65 = arg29 | -512 + 71 ^ var63
    var66 = arg29 & (arg30 | 978)
    var67 = (var66 - var65) - var66 & 167
    if var57 < var66:
        var68 = -1161689918 ^ ((arg29 - var64) - var63)
    else:
        var68 = 1691535512 - var64
    var69 = var65 + ((var65 ^ 1685502148) & arg29)
    var70 = (var57 ^ var67 - -957) + 476
    var71 = (arg29 + var65 | var66) & var65
    var72 = (var57 & var67) | var67 & arg29
    var73 = var57 - 550 ^ var70 ^ var71
    var74 = -15464595 | var71
    var75 = var63 ^ var65 | var73 - var65
    var76 = 310532624 & var72 | var70 ^ var67
    var77 = (var64 ^ var76 + var63) - var64
    var78 = arg29 + arg30 ^ var76 + var71
    var79 = var73 + ((var69 | arg29) ^ arg30)
    var80 = var70 | var73
    var81 = var70 + var76
    var82 = var63 ^ ((var64 | var74) & 1875592674)
    var83 = (-312 & 906) ^ (183760913 + var73)
    var84 = var63 | var71 | var73
    var85 = var70 - (var64 & var82 - var73)
    result = var78 ^ var72
    return result
class class10(object):
    def func11(self, arg58, arg59):
        result = arg58 | (arg58 | arg58)
        return result
def func7(arg31, arg32):
    var37 = func8(arg32, arg31)
    var42 = func9(var37, arg31)
    var43 = (-923182564 ^ (var37 ^ -350)) - -1666751151
    var44 = arg31 ^ 890
    var45 = var44 + -749672293 ^ (arg32 & 824)
    var46 = 243 ^ var37 & 70
    var47 = var45 | (var44 ^ 1359509494) + var43
    var48 = var37 ^ var45 & var37
    if var47 < var47:
        var49 = arg31 ^ var44 + (arg31 & var47)
    else:
        var49 = ((var42 & var46) | arg31) ^ 830654311
    var50 = (var46 - (823523299 ^ 882)) & -792
    var51 = var42 + -700 - var43 - var44
    var52 = arg32 & 710 ^ var44 - var37
    var53 = ((var37 & var45) & var51) | var50
    var54 = (var48 | var45) + var46 & var45
    if var44 < var51:
        var55 = (var46 ^ var42 - -680) | 530092949
    else:
        var55 = var53 | arg31
    var56 = (var47 ^ arg31) ^ var43 | var54
    result = var43 - (var54 - var42)
    return result
def func9(arg38, arg39):
    var40 = 0
    for var41 in xrange(17):
        var40 += var40 + var40 ^ arg39
    return var40
def func8(arg33, arg34):
    var35 = 0
    for var36 in xrange(39):
        var35 += var36 ^ arg33 + -10
    return var35
def func5():
    closure = [7]
    def func4(arg26, arg27):
        closure[0] += func6(arg26, arg27)
        return closure[0]
    func = func4
    return func
var28 = func5()
def func2(arg5, arg6):
    var7 = ((-94095168 - arg6) ^ arg6) & arg6
    var8 = arg6 ^ 1073552881 + arg5 | arg6
    var9 = var8 & var8
    var10 = (arg5 & arg5) & var8 ^ var8
    var11 = var8 - var10 ^ var8 | arg5
    var12 = var7 ^ ((arg6 ^ var8) & var10)
    var13 = var11 | -1945554171
    var14 = var8 & var10 | -1287348843
    var15 = (var12 & var13) - var10 & var14
    var16 = var13 - var10
    var17 = var9 - var12 - var10
    var18 = var14 ^ (arg6 - var7 ^ 1854178741)
    var19 = (var13 & arg5 ^ var7) & var8
    var20 = var14 + 599874261 - (var7 & var16)
    var21 = var9 ^ var14
    var22 = var19 | (var14 + var19) - var7
    var23 = var16 | var16
    result = var16 - var13 + var9 & arg5 + var13
    return result
def func1(arg1, arg2):
    var3 = arg1 ^ 796119492
    var4 = arg1 - (arg2 - (arg1 | (arg1 - var3 & ((arg1 ^ (-1001350827 | var3)) & var3) ^ ((arg1 - arg2 + -688 - (arg2 | var3) & (-357 & arg2)) & 215) ^ arg2)) | 917 - arg1) ^ arg2 + var3
    result = (arg2 | ((arg2 + (-744 & (var4 | arg2))) | arg2)) + -131 ^ (arg2 - var4) & 1553828735 + arg2 ^ -1258707630
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 0'
    print 'func_number: 3'
    print 'arg_number: 24'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 92'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
